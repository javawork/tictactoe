// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tictactoe.proto

#ifndef PROTOBUF_tictactoe_2eproto__INCLUDED
#define PROTOBUF_tictactoe_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tictactoe {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tictactoe_2eproto();
void protobuf_AssignDesc_tictactoe_2eproto();
void protobuf_ShutdownFile_tictactoe_2eproto();

class CLogin;
class SLogin;
class SStart;
class SStart_User;
class CSetPiece;
class SSetPiece;
class SEnd;

enum MessageType {
  C_LOGIN = 0,
  S_LOGIN = 1,
  S_START = 2,
  C_SETPIECE = 3,
  S_SETPIECE = 4,
  S_END = 5
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = C_LOGIN;
const MessageType MessageType_MAX = S_END;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class CLogin : public ::google::protobuf::Message {
 public:
  CLogin();
  virtual ~CLogin();

  CLogin(const CLogin& from);

  inline CLogin& operator=(const CLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLogin& default_instance();

  void Swap(CLogin* other);

  // implements Message ----------------------------------------------

  CLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLogin& from);
  void MergeFrom(const CLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:tictactoe.CLogin)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_tictactoe_2eproto();
  friend void protobuf_AssignDesc_tictactoe_2eproto();
  friend void protobuf_ShutdownFile_tictactoe_2eproto();

  void InitAsDefaultInstance();
  static CLogin* default_instance_;
};
// -------------------------------------------------------------------

class SLogin : public ::google::protobuf::Message {
 public:
  SLogin();
  virtual ~SLogin();

  SLogin(const SLogin& from);

  inline SLogin& operator=(const SLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLogin& default_instance();

  void Swap(SLogin* other);

  // implements Message ----------------------------------------------

  SLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLogin& from);
  void MergeFrom(const SLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tictactoe.SLogin)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tictactoe_2eproto();
  friend void protobuf_AssignDesc_tictactoe_2eproto();
  friend void protobuf_ShutdownFile_tictactoe_2eproto();

  void InitAsDefaultInstance();
  static SLogin* default_instance_;
};
// -------------------------------------------------------------------

class SStart_User : public ::google::protobuf::Message {
 public:
  SStart_User();
  virtual ~SStart_User();

  SStart_User(const SStart_User& from);

  inline SStart_User& operator=(const SStart_User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SStart_User& default_instance();

  void Swap(SStart_User* other);

  // implements Message ----------------------------------------------

  SStart_User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SStart_User& from);
  void MergeFrom(const SStart_User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 piece_type = 2;
  inline bool has_piece_type() const;
  inline void clear_piece_type();
  static const int kPieceTypeFieldNumber = 2;
  inline ::google::protobuf::int32 piece_type() const;
  inline void set_piece_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tictactoe.SStart.User)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_piece_type();
  inline void clear_has_piece_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 piece_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_tictactoe_2eproto();
  friend void protobuf_AssignDesc_tictactoe_2eproto();
  friend void protobuf_ShutdownFile_tictactoe_2eproto();

  void InitAsDefaultInstance();
  static SStart_User* default_instance_;
};
// -------------------------------------------------------------------

class SStart : public ::google::protobuf::Message {
 public:
  SStart();
  virtual ~SStart();

  SStart(const SStart& from);

  inline SStart& operator=(const SStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SStart& default_instance();

  void Swap(SStart* other);

  // implements Message ----------------------------------------------

  SStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SStart& from);
  void MergeFrom(const SStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SStart_User User;

  // accessors -------------------------------------------------------

  // repeated .tictactoe.SStart.User list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::tictactoe::SStart_User& list(int index) const;
  inline ::tictactoe::SStart_User* mutable_list(int index);
  inline ::tictactoe::SStart_User* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::tictactoe::SStart_User >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::tictactoe::SStart_User >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:tictactoe.SStart)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::tictactoe::SStart_User > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tictactoe_2eproto();
  friend void protobuf_AssignDesc_tictactoe_2eproto();
  friend void protobuf_ShutdownFile_tictactoe_2eproto();

  void InitAsDefaultInstance();
  static SStart* default_instance_;
};
// -------------------------------------------------------------------

class CSetPiece : public ::google::protobuf::Message {
 public:
  CSetPiece();
  virtual ~CSetPiece();

  CSetPiece(const CSetPiece& from);

  inline CSetPiece& operator=(const CSetPiece& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSetPiece& default_instance();

  void Swap(CSetPiece* other);

  // implements Message ----------------------------------------------

  CSetPiece* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSetPiece& from);
  void MergeFrom(const CSetPiece& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // required int32 piecetype = 2;
  inline bool has_piecetype() const;
  inline void clear_piecetype();
  static const int kPiecetypeFieldNumber = 2;
  inline ::google::protobuf::int32 piecetype() const;
  inline void set_piecetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tictactoe.CSetPiece)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_piecetype();
  inline void clear_has_piecetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 piecetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_tictactoe_2eproto();
  friend void protobuf_AssignDesc_tictactoe_2eproto();
  friend void protobuf_ShutdownFile_tictactoe_2eproto();

  void InitAsDefaultInstance();
  static CSetPiece* default_instance_;
};
// -------------------------------------------------------------------

class SSetPiece : public ::google::protobuf::Message {
 public:
  SSetPiece();
  virtual ~SSetPiece();

  SSetPiece(const SSetPiece& from);

  inline SSetPiece& operator=(const SSetPiece& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SSetPiece& default_instance();

  void Swap(SSetPiece* other);

  // implements Message ----------------------------------------------

  SSetPiece* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SSetPiece& from);
  void MergeFrom(const SSetPiece& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // required int32 piecetype = 2;
  inline bool has_piecetype() const;
  inline void clear_piecetype();
  static const int kPiecetypeFieldNumber = 2;
  inline ::google::protobuf::int32 piecetype() const;
  inline void set_piecetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tictactoe.SSetPiece)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_piecetype();
  inline void clear_has_piecetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 piecetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_tictactoe_2eproto();
  friend void protobuf_AssignDesc_tictactoe_2eproto();
  friend void protobuf_ShutdownFile_tictactoe_2eproto();

  void InitAsDefaultInstance();
  static SSetPiece* default_instance_;
};
// -------------------------------------------------------------------

class SEnd : public ::google::protobuf::Message {
 public:
  SEnd();
  virtual ~SEnd();

  SEnd(const SEnd& from);

  inline SEnd& operator=(const SEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SEnd& default_instance();

  void Swap(SEnd* other);

  // implements Message ----------------------------------------------

  SEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SEnd& from);
  void MergeFrom(const SEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 winner_piece = 1;
  inline bool has_winner_piece() const;
  inline void clear_winner_piece();
  static const int kWinnerPieceFieldNumber = 1;
  inline ::google::protobuf::int32 winner_piece() const;
  inline void set_winner_piece(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tictactoe.SEnd)
 private:
  inline void set_has_winner_piece();
  inline void clear_has_winner_piece();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 winner_piece_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tictactoe_2eproto();
  friend void protobuf_AssignDesc_tictactoe_2eproto();
  friend void protobuf_ShutdownFile_tictactoe_2eproto();

  void InitAsDefaultInstance();
  static SEnd* default_instance_;
};
// ===================================================================


// ===================================================================

// CLogin

// -------------------------------------------------------------------

// SLogin

// required int32 id = 1;
inline bool SLogin::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SLogin::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SLogin::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SLogin::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SLogin::id() const {
  return id_;
}
inline void SLogin::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// SStart_User

// required int32 id = 1;
inline bool SStart_User::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SStart_User::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SStart_User::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SStart_User::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SStart_User::id() const {
  return id_;
}
inline void SStart_User::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 piece_type = 2;
inline bool SStart_User::has_piece_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SStart_User::set_has_piece_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SStart_User::clear_has_piece_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SStart_User::clear_piece_type() {
  piece_type_ = 0;
  clear_has_piece_type();
}
inline ::google::protobuf::int32 SStart_User::piece_type() const {
  return piece_type_;
}
inline void SStart_User::set_piece_type(::google::protobuf::int32 value) {
  set_has_piece_type();
  piece_type_ = value;
}

// -------------------------------------------------------------------

// SStart

// repeated .tictactoe.SStart.User list = 1;
inline int SStart::list_size() const {
  return list_.size();
}
inline void SStart::clear_list() {
  list_.Clear();
}
inline const ::tictactoe::SStart_User& SStart::list(int index) const {
  return list_.Get(index);
}
inline ::tictactoe::SStart_User* SStart::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::tictactoe::SStart_User* SStart::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tictactoe::SStart_User >&
SStart::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::tictactoe::SStart_User >*
SStart::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// CSetPiece

// required int32 pos = 1;
inline bool CSetPiece::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSetPiece::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSetPiece::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSetPiece::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 CSetPiece::pos() const {
  return pos_;
}
inline void CSetPiece::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// required int32 piecetype = 2;
inline bool CSetPiece::has_piecetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSetPiece::set_has_piecetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSetPiece::clear_has_piecetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSetPiece::clear_piecetype() {
  piecetype_ = 0;
  clear_has_piecetype();
}
inline ::google::protobuf::int32 CSetPiece::piecetype() const {
  return piecetype_;
}
inline void CSetPiece::set_piecetype(::google::protobuf::int32 value) {
  set_has_piecetype();
  piecetype_ = value;
}

// -------------------------------------------------------------------

// SSetPiece

// required int32 pos = 1;
inline bool SSetPiece::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SSetPiece::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SSetPiece::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SSetPiece::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 SSetPiece::pos() const {
  return pos_;
}
inline void SSetPiece::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// required int32 piecetype = 2;
inline bool SSetPiece::has_piecetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SSetPiece::set_has_piecetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SSetPiece::clear_has_piecetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SSetPiece::clear_piecetype() {
  piecetype_ = 0;
  clear_has_piecetype();
}
inline ::google::protobuf::int32 SSetPiece::piecetype() const {
  return piecetype_;
}
inline void SSetPiece::set_piecetype(::google::protobuf::int32 value) {
  set_has_piecetype();
  piecetype_ = value;
}

// -------------------------------------------------------------------

// SEnd

// required int32 winner_piece = 1;
inline bool SEnd::has_winner_piece() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SEnd::set_has_winner_piece() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SEnd::clear_has_winner_piece() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SEnd::clear_winner_piece() {
  winner_piece_ = 0;
  clear_has_winner_piece();
}
inline ::google::protobuf::int32 SEnd::winner_piece() const {
  return winner_piece_;
}
inline void SEnd::set_winner_piece(::google::protobuf::int32 value) {
  set_has_winner_piece();
  winner_piece_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tictactoe

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tictactoe::MessageType>() {
  return ::tictactoe::MessageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tictactoe_2eproto__INCLUDED
